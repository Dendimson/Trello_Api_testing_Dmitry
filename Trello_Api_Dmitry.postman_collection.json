{
	"info": {
		"_postman_id": "0999f233-3748-4a5a-a5a6-792bfecb57c9",
		"name": "Trello_Api_Dmitry",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44661984",
		"_collection_link": "https://dendimson.postman.co/workspace/Test-Workspace~0f71d114-c3ca-471c-bc13-905fb6582507/collection/44661984-0999f233-3748-4a5a-a5a6-792bfecb57c9?action=share&source=collection_link&creator=44661984"
	},
	"item": [
		{
			"name": "Boards",
			"item": [
				{
					"name": "Create a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"board_id\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"Response contains ID\", function () {\r",
									"    let jsonData = pm.response.json(); // Извлекаем JSON-ответ\r",
									"    pm.expect(jsonData).to.have.property(\"id\"); // Проверяем, что поле id присутствует\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"var expectedSchema = {\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"name\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"desc\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"descData\": {},\r",
									"        \"closed\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"idOrganization\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"idEnterprise\": {},\r",
									"        \"pinned\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"url\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"shortUrl\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"prefs\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"permissionLevel\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"hideVotes\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"voting\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"comments\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"invitations\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"selfJoin\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"cardCovers\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"showCompleteStatus\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"cardCounts\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"isTemplate\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"cardAging\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"calendarFeedEnabled\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"hiddenPluginBoardButtons\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {}\r",
									"                },\r",
									"                \"switcherViews\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"items\": {\r",
									"                        \"type\": \"object\",\r",
									"                        \"properties\": {\r",
									"                            \"viewType\": {\r",
									"                                \"type\": \"string\"\r",
									"                            },\r",
									"                            \"enabled\": {\r",
									"                                \"type\": \"boolean\"\r",
									"                            }\r",
									"                        },\r",
									"                        \"required\": [\r",
									"                            \"viewType\",\r",
									"                            \"enabled\"\r",
									"                        ]\r",
									"                    }\r",
									"                },\r",
									"                \"autoArchive\": {},\r",
									"                \"background\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"backgroundColor\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"backgroundDarkColor\": {},\r",
									"                \"backgroundImage\": {},\r",
									"                \"backgroundDarkImage\": {},\r",
									"                \"backgroundImageScaled\": {},\r",
									"                \"backgroundTile\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"backgroundBrightness\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"sharedSourceUrl\": {},\r",
									"                \"backgroundBottomColor\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"backgroundTopColor\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"canBePublic\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"canBeEnterprise\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"canBeOrg\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"canBePrivate\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                },\r",
									"                \"canInvite\": {\r",
									"                    \"type\": \"boolean\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"permissionLevel\",\r",
									"                \"hideVotes\",\r",
									"                \"voting\",\r",
									"                \"comments\",\r",
									"                \"invitations\",\r",
									"                \"selfJoin\",\r",
									"                \"cardCovers\",\r",
									"                \"showCompleteStatus\",\r",
									"                \"cardCounts\",\r",
									"                \"isTemplate\",\r",
									"                \"cardAging\",\r",
									"                \"calendarFeedEnabled\",\r",
									"                \"hiddenPluginBoardButtons\",\r",
									"                \"switcherViews\",\r",
									"                \"autoArchive\",\r",
									"                \"background\",\r",
									"                \"backgroundColor\",\r",
									"                \"backgroundDarkColor\",\r",
									"                \"backgroundImage\",\r",
									"                \"backgroundDarkImage\",\r",
									"                \"backgroundImageScaled\",\r",
									"                \"backgroundTile\",\r",
									"                \"backgroundBrightness\",\r",
									"                \"sharedSourceUrl\",\r",
									"                \"backgroundBottomColor\",\r",
									"                \"backgroundTopColor\",\r",
									"                \"canBePublic\",\r",
									"                \"canBeEnterprise\",\r",
									"                \"canBeOrg\",\r",
									"                \"canBePrivate\",\r",
									"                \"canInvite\"\r",
									"            ]\r",
									"        },\r",
									"        \"labelNames\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"green\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"yellow\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"orange\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"red\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"purple\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"blue\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"sky\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"lime\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"pink\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"black\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"green_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"yellow_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"orange_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"red_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"purple_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"blue_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"sky_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"lime_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"pink_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"black_dark\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"green_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"yellow_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"orange_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"red_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"purple_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"blue_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"sky_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"lime_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"pink_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"black_light\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"green\",\r",
									"                \"yellow\",\r",
									"                \"orange\",\r",
									"                \"red\",\r",
									"                \"purple\",\r",
									"                \"blue\",\r",
									"                \"sky\",\r",
									"                \"lime\",\r",
									"                \"pink\",\r",
									"                \"black\",\r",
									"                \"green_dark\",\r",
									"                \"yellow_dark\",\r",
									"                \"orange_dark\",\r",
									"                \"red_dark\",\r",
									"                \"purple_dark\",\r",
									"                \"blue_dark\",\r",
									"                \"sky_dark\",\r",
									"                \"lime_dark\",\r",
									"                \"pink_dark\",\r",
									"                \"black_dark\",\r",
									"                \"green_light\",\r",
									"                \"yellow_light\",\r",
									"                \"orange_light\",\r",
									"                \"red_light\",\r",
									"                \"purple_light\",\r",
									"                \"blue_light\",\r",
									"                \"sky_light\",\r",
									"                \"lime_light\",\r",
									"                \"pink_light\",\r",
									"                \"black_light\"\r",
									"            ]\r",
									"        },\r",
									"        \"limits\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {},\r",
									"            \"required\": []\r",
									"        }\r",
									"    },\r",
									"    \"required\": [\r",
									"        \"id\",\r",
									"        \"name\",\r",
									"        \"desc\",\r",
									"        \"descData\",\r",
									"        \"closed\",\r",
									"        \"idOrganization\",\r",
									"        \"idEnterprise\",\r",
									"        \"pinned\",\r",
									"        \"url\",\r",
									"        \"shortUrl\",\r",
									"        \"prefs\",\r",
									"        \"labelNames\",\r",
									"        \"limits\"\r",
									"    ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(expectedSchema);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string  Dmitry\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dmitry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Name Board is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"DmitryTestBoard\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/boards/?name={{name}}&key={{key}}&token={{token}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let storedId = pm.environment.get(\"board_id\"); // Получаем сохранённое значение id\r",
									"\r",
									"pm.test(\"Response contains correct board_id\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.id).to.eql(storedId); // Проверяем, что id из ответа совпадает с переменной\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"board_id matches the expected pattern\", function () {\r",
									"    let jsonData = pm.response.json(); // Получаем JSON-ответ\r",
									"    let id = jsonData.id; // Извлекаем значение ID из ответа\r",
									"\r",
									"    // Регулярное выражение для проверки ID\r",
									"    let idPattern = /^[0-9a-fA-F]{24}$/;\r",
									"\r",
									"    // Проверяем, что ID соответствует паттерну\r",
									"    pm.expect(id).to.match(idPattern, \"board_id does not match the expected pattern\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string  Dmitry\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dmitry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Name Board is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"DmitryTestBoard\");\r",
									"});\r",
									"\r",
									"var expectedSchema = {\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"name\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"idOrganization\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"            \"type\": \"string\"\r",
									"        }\r",
									"    },\r",
									"    \"required\": [\r",
									"        \"id\",\r",
									"        \"name\",\r",
									"        \"idOrganization\",\r",
									"        \"url\"\r",
									"    ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(expectedSchema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/boards/{{board_id}}?key={{key}}&token={{token}}&fields=id,name,idOrganization,url",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards",
								"{{board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "fields",
									"value": "id,name,idOrganization,url"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Board",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генерируем случайный ID, соответствующий паттерну ^[0-9a-fA-F]{24}$\r",
									"/*let newId = Array.from({ length: 24 }, () => \"0123456789abcdef\"[Math.floor(Math.random() * 16)]).join(\"\");\r",
									"pm.environment.set(\"id\", newId); // Сохраняем новое значение в переменную среды\r",
									"console.log(\"ID dynamically generated and updated: \", pm.environment.get(\"id\"));*/"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"ID is valid\", function () {\r",
									"    let jsonData = pm.response.json(); // Получаем JSON-ответ\r",
									"    let id = jsonData.id; // Извлекаем значение ID из ответа\r",
									"\r",
									"    // Регулярное выражение для проверки ID\r",
									"    let idPattern = /^[0-9a-fA-F]{24}$/;\r",
									"\r",
									"    // Проверяем, что ID соответствует паттерну\r",
									"    pm.expect(id).to.match(idPattern, \"ID does not match the expected pattern\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string  Dmitry\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dmitry\");\r",
									"});\r",
									"\r",
									"pm.test(\"Name Board is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"DmitryTestBoard\");\r",
									"});\r",
									"\r",
									"var expectedSchema = {\r",
									"    \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"desc\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"descData\": {},\r",
									"    \"closed\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"idOrganization\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"idEnterprise\": {},\r",
									"    \"pinned\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"shortUrl\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"prefs\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"permissionLevel\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"hideVotes\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"voting\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"comments\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"invitations\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"selfJoin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"cardCovers\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"showCompleteStatus\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"cardCounts\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"isTemplate\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"cardAging\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"calendarFeedEnabled\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"hiddenPluginBoardButtons\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": {}\r",
									"        },\r",
									"        \"switcherViews\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"viewType\": {\r",
									"                \"type\": \"string\"\r",
									"              },\r",
									"              \"enabled\": {\r",
									"                \"type\": \"boolean\"\r",
									"              }\r",
									"            },\r",
									"            \"required\": [\r",
									"              \"viewType\",\r",
									"              \"enabled\"\r",
									"            ]\r",
									"          }\r",
									"        },\r",
									"        \"autoArchive\": {},\r",
									"        \"background\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"backgroundColor\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"backgroundDarkColor\": {},\r",
									"        \"backgroundImage\": {},\r",
									"        \"backgroundDarkImage\": {},\r",
									"        \"backgroundImageScaled\": {},\r",
									"        \"backgroundTile\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"backgroundBrightness\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sharedSourceUrl\": {},\r",
									"        \"backgroundBottomColor\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"backgroundTopColor\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"canBePublic\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"canBeEnterprise\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"canBeOrg\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"canBePrivate\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"canInvite\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"permissionLevel\",\r",
									"        \"hideVotes\",\r",
									"        \"voting\",\r",
									"        \"comments\",\r",
									"        \"invitations\",\r",
									"        \"selfJoin\",\r",
									"        \"cardCovers\",\r",
									"        \"showCompleteStatus\",\r",
									"        \"cardCounts\",\r",
									"        \"isTemplate\",\r",
									"        \"cardAging\",\r",
									"        \"calendarFeedEnabled\",\r",
									"        \"hiddenPluginBoardButtons\",\r",
									"        \"switcherViews\",\r",
									"        \"autoArchive\",\r",
									"        \"background\",\r",
									"        \"backgroundColor\",\r",
									"        \"backgroundDarkColor\",\r",
									"        \"backgroundImage\",\r",
									"        \"backgroundDarkImage\",\r",
									"        \"backgroundImageScaled\",\r",
									"        \"backgroundTile\",\r",
									"        \"backgroundBrightness\",\r",
									"        \"sharedSourceUrl\",\r",
									"        \"backgroundBottomColor\",\r",
									"        \"backgroundTopColor\",\r",
									"        \"canBePublic\",\r",
									"        \"canBeEnterprise\",\r",
									"        \"canBeOrg\",\r",
									"        \"canBePrivate\",\r",
									"        \"canInvite\"\r",
									"      ]\r",
									"    },\r",
									"    \"labelNames\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"green\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"yellow\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"orange\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"red\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"purple\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"blue\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sky\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"lime\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"pink\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"black\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"green_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"yellow_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"orange_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"red_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"purple_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"blue_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sky_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"lime_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"pink_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"black_dark\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"green_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"yellow_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"orange_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"red_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"purple_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"blue_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sky_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"lime_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"pink_light\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"black_light\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"green\",\r",
									"        \"yellow\",\r",
									"        \"orange\",\r",
									"        \"red\",\r",
									"        \"purple\",\r",
									"        \"blue\",\r",
									"        \"sky\",\r",
									"        \"lime\",\r",
									"        \"pink\",\r",
									"        \"black\",\r",
									"        \"green_dark\",\r",
									"        \"yellow_dark\",\r",
									"        \"orange_dark\",\r",
									"        \"red_dark\",\r",
									"        \"purple_dark\",\r",
									"        \"blue_dark\",\r",
									"        \"sky_dark\",\r",
									"        \"lime_dark\",\r",
									"        \"pink_dark\",\r",
									"        \"black_dark\",\r",
									"        \"green_light\",\r",
									"        \"yellow_light\",\r",
									"        \"orange_light\",\r",
									"        \"red_light\",\r",
									"        \"purple_light\",\r",
									"        \"blue_light\",\r",
									"        \"sky_light\",\r",
									"        \"lime_light\",\r",
									"        \"pink_light\",\r",
									"        \"black_light\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"name\",\r",
									"    \"desc\",\r",
									"    \"descData\",\r",
									"    \"closed\",\r",
									"    \"idOrganization\",\r",
									"    \"idEnterprise\",\r",
									"    \"pinned\",\r",
									"    \"url\",\r",
									"    \"shortUrl\",\r",
									"    \"prefs\",\r",
									"    \"labelNames\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(expectedSchema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/boards/{{board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards",
								"{{board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/boards/{{board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards",
								"{{board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Members",
			"item": [
				{
					"name": "Get a Member",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string дмитрий\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"дмитрий\");\r",
									"});\r",
									"\r",
									"pm.test(\"fullName is valid (json)\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.fullName).to.eql(\"дмитрий шутов\");\r",
									"});\r",
									"\r",
									"var expectedSchema = {\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"id\": { \"type\": \"string\", \"pattern\": \"^[0-9a-fA-F]{24}$\" },\r",
									"        \"username\": { \"type\": \"string\" },\r",
									"        \"fullName\": { \"type\": \"string\" },\r",
									"        \"initials\": { \"type\": \"string\" },\r",
									"        \"avatarHash\": { \"type\": [\"string\", \"null\"] },\r",
									"        \"avatarUrl\": { \"type\": [\"string\", \"null\"] },\r",
									"        \"bio\": { \"type\": \"string\" },\r",
									"        \"idEnterprisesDeactivated\": {\r",
									"            \"type\": [\"array\", \"null\"], // Может быть массивом или null\r",
									"            \"items\": { \"type\": \"string\" }\r",
									"        },\r",
									"        \"prefs\": {\r",
									"            \"type\": [\"object\", \"null\"], // Может быть объектом или null\r",
									"            \"properties\": {\r",
									"                \"timezoneInfo\": {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"offsetCurrent\": { \"type\": \"number\" },\r",
									"                        \"timezoneCurrent\": { \"type\": \"string\" },\r",
									"                        \"offsetNext\": { \"type\": \"number\" },\r",
									"                        \"dateNext\": { \"type\": \"string\", \"format\": \"date-time\" },\r",
									"                        \"timezoneNext\": { \"type\": \"string\" }\r",
									"                    }\r",
									"                },\r",
									"                \"privacy\": {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"fullName\": { \"type\": \"string\" },\r",
									"                        \"avatar\": { \"type\": \"string\" }\r",
									"                    }\r",
									"                },\r",
									"                \"sendSummaries\": { \"type\": \"boolean\" },\r",
									"                \"minutesBetweenSummaries\": { \"type\": \"number\" },\r",
									"                \"colorBlind\": { \"type\": \"boolean\" },\r",
									"                \"locale\": { \"type\": \"string\" },\r",
									"                \"timezone\": { \"type\": \"string\" }\r",
									"            },\r",
									"            \"required\": [] // Убираем обязательность вложенных полей\r",
									"        }\r",
									"    },\r",
									"    \"required\": [\"id\", \"username\", \"fullName\"] // Только основные обязательные поля\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(expectedSchema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/members/{{member_id}}?key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"members",
								"{{member_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Boards that Member belongs to",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"var expectedSchema = {\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"id\": { \"type\": \"string\", \"pattern\": \"^[0-9a-fA-F]{24}$\" },\r",
									"            \"nodeId\": { \"type\": \"string\" },\r",
									"            \"name\": { \"type\": \"string\" },\r",
									"            \"desc\": { \"type\": \"string\" },\r",
									"            \"descData\": { \"type\": [\"null\", \"object\"] },\r",
									"            \"closed\": { \"type\": \"boolean\" },\r",
									"            \"dateClosed\": { \"type\": [\"null\", \"string\"], \"format\": \"date-time\" },\r",
									"            \"idOrganization\": { \"type\": \"string\" },\r",
									"            \"idEnterprise\": { \"type\": [\"null\", \"string\"] },\r",
									"            \"limits\": {\r",
									"                \"type\": \"object\",\r",
									"                \"properties\": {\r",
									"                    \"attachments\": {\r",
									"                        \"type\": \"object\",\r",
									"                        \"properties\": {\r",
									"                            \"perBoard\": { \"type\": \"object\", \"properties\": { \"status\": { \"type\": \"string\" }, \"disableAt\": { \"type\": \"integer\" }, \"warnAt\": { \"type\": \"integer\" } } },\r",
									"                            \"perCard\": { \"type\": \"object\", \"properties\": { \"status\": { \"type\": \"string\" }, \"disableAt\": { \"type\": \"integer\" }, \"warnAt\": { \"type\": \"integer\" } } }\r",
									"                        }\r",
									"                    },\r",
									"                    \"boards\": {\r",
									"                        \"type\": \"object\",\r",
									"                        \"properties\": {\r",
									"                            \"totalMembersPerBoard\": { \"type\": \"object\", \"properties\": { \"status\": { \"type\": \"string\" }, \"disableAt\": { \"type\": \"integer\" }, \"warnAt\": { \"type\": \"integer\" } } },\r",
									"                            \"totalAccessRequestsPerBoard\": { \"type\": \"object\", \"properties\": { \"status\": { \"type\": \"string\" }, \"disableAt\": { \"type\": \"integer\" }, \"warnAt\": { \"type\": \"integer\" } } }\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            },\r",
									"            \"prefs\": {\r",
									"                \"type\": \"object\",\r",
									"                \"properties\": {\r",
									"                    \"permissionLevel\": { \"type\": \"string\" },\r",
									"                    \"hideVotes\": { \"type\": \"boolean\" },\r",
									"                    \"voting\": { \"type\": \"string\" },\r",
									"                    \"comments\": { \"type\": \"string\" },\r",
									"                    \"invitations\": { \"type\": \"string\" },\r",
									"                    \"selfJoin\": { \"type\": \"boolean\" },\r",
									"                    \"cardCovers\": { \"type\": \"boolean\" },\r",
									"                    \"showCompleteStatus\": { \"type\": \"boolean\" },\r",
									"                    \"cardCounts\": { \"type\": \"boolean\" },\r",
									"                    \"isTemplate\": { \"type\": \"boolean\" },\r",
									"                    \"cardAging\": { \"type\": \"string\" },\r",
									"                    \"calendarFeedEnabled\": { \"type\": \"boolean\" },\r",
									"                    \"background\": { \"type\": \"string\" },\r",
									"                    \"backgroundColor\": { \"type\": \"string\" },\r",
									"                    \"backgroundBrightness\": { \"type\": \"string\" },\r",
									"                    \"canBePublic\": { \"type\": \"boolean\" },\r",
									"                    \"canBeEnterprise\": { \"type\": \"boolean\" },\r",
									"                    \"canBeOrg\": { \"type\": \"boolean\" },\r",
									"                    \"canBePrivate\": { \"type\": \"boolean\" },\r",
									"                    \"canInvite\": { \"type\": \"boolean\" }\r",
									"                }\r",
									"            },\r",
									"            \"memberships\": {\r",
									"                \"type\": \"array\",\r",
									"                \"items\": {\r",
									"                    \"type\": \"object\",\r",
									"                    \"properties\": {\r",
									"                        \"id\": { \"type\": \"string\" },\r",
									"                        \"idMember\": { \"type\": \"string\" },\r",
									"                        \"memberType\": { \"type\": \"string\" },\r",
									"                        \"unconfirmed\": { \"type\": \"boolean\" },\r",
									"                        \"deactivated\": { \"type\": \"boolean\" }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"required\": [\"id\", \"name\", \"closed\", \"prefs\"]\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(expectedSchema);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/members/{{member_id}}/boards?key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"members",
								"{{member_id}}",
								"boards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}